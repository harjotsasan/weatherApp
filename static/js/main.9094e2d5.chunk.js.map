{"version":3,"sources":["Components/WeatherUI.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherUI","props","useState","cityInput","setCityInput","className","type","value","onChange","event","eventTargetValue","target","placeholder","name","autoFocus","onClick","preventDefault","theCity","App","City","setCity","weather","setWeather","url","useEffect","FetchAPI","a","axios","get","response","console","log","data","getLocation","currentLocationInfo","city","main","temp","class","sys","country","Math","round","description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSA6BeA,EA1BG,SAACC,GAAW,IAAD,EACSC,mBAAS,IADlB,mBAClBC,EADkB,KACPC,EADO,KAQzB,OACI,mCACI,qBAAKC,UAAU,uBAAf,SACI,qBAAKA,UAAU,cAAf,SACI,iCACI,uBAAOC,KAAK,OAAOC,MAAOJ,EAAWK,SAV9B,SAACC,GACxB,IAAIC,EAAmBD,EAAME,OAAOJ,MACpCH,EAAaM,IAQsEE,YAAY,oBAAoBC,KAAK,iBAAiBC,WAAS,IAClI,wBAAQC,QAAS,SAACN,GACdA,EAAMO,iBACNf,EAAMgB,QAAQd,IAFlB,SAII,mBAAGE,UAAU,yBAAb,iCC0Cba,EAxDH,WAAO,IAAD,EACOhB,mBAAS,IADhB,mBACTiB,EADS,KACJC,EADI,OAEclB,mBAAS,IAFvB,mBAETmB,EAFS,KAEAC,EAFA,KAIVC,EAAG,2DAAsDJ,EAAtD,kBADG,mCACH,iBAETK,qBAAW,WACTC,OAIF,IAAMA,EAAQ,uCAAG,4BAAAC,EAAA,sEACQC,IAAMC,IAAIL,GADlB,OACTM,EADS,OAEfC,QAAQC,IAAIF,EAASG,MACrBV,EAAWO,EAASG,MAHL,2CAAH,qDAKRC,EAAW,uCAAG,8BAAAP,EAAA,sEACKC,IAAMC,IAAN,wEADL,OACZC,EADY,OAEZK,EAFY,UAEaL,EAASG,KAAKG,MAC7CL,QAAQC,IAAIF,GACZT,EAAQc,GACRT,IALkB,2CAAH,qDAYjB,OACE,mCACE,qBAAKpB,UAAoC,oBAAhBgB,EAAQe,MAA0Bf,EAAQe,KAAKC,KAAO,GAAM,WAAuB,MAA5G,SACE,sBAAKhC,UAAU,2BAAf,UACE,cAAC,EAAD,CAAWY,QATA,SAACkB,GAClBf,EAAQe,GACRV,IACAK,QAAQC,IAAR,UAAeI,OAQT,qBAAK9B,UAAU,iCAAf,SACE,yBAAQA,UAAU,kBAAkBU,QAASkB,EAA7C,cAA2D,mBAAGK,MAAM,0BAApE,yBAIuB,oBAAhBjB,EAAQe,KACf,sBAAK/B,UAAU,YAAf,UACE,sBAAKA,UAAU,cAAf,UAA8Bc,EAA9B,KAAsCE,EAAQkB,IAAIC,WAElD,sBAAKnC,UAAU,gBAAf,UAAgCoC,KAAKC,MAAMrB,EAAQe,KAAKC,MAAxD,WAEA,8BAAMhB,EAAQA,QAAQ,GAAGsB,iBAGxB,WC3CAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9094e2d5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"./WeatherUI.css\";\r\n\r\nconst WeatherUI = (props) => {    \r\n    const [cityInput, setCityInput] = useState('');\r\n\r\n    const addCityNameHandler = (event) => {\r\n        var eventTargetValue = event.target.value;\r\n        setCityInput(eventTargetValue);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className='weatherCardContainer'>\r\n                <div className='weatherCard'>\r\n                    <form>\r\n                        <input type='text' value={cityInput} onChange={addCityNameHandler} placeholder='Enter the City...' name='cityInputField' autoFocus />\r\n                        <button onClick={(event)=>{\r\n                            event.preventDefault();\r\n                            props.theCity(cityInput);\r\n                        }}>\r\n                            <i className=\"fas fa-search-location\"> Search</i>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>         \r\n        </>\r\n    );\r\n}\r\nexport default WeatherUI;","import axios from 'axios';\nimport React from \"react\";\nimport { useState, useEffect } from 'react/cjs/react.development';\nimport './App.css';\nimport WeatherUI from './Components/WeatherUI';\n\n\nconst App = () => {\n  const [City,setCity] = useState('');\n  const [weather, setWeather] = useState({});\n  const KEY = \"a6fa573d63f563261ef96a20068752c8\";\n  const url =`http://api.openweathermap.org/data/2.5/weather?q=${City}&appid=${KEY}&units=metric`;\n  \n  useEffect( () => {\n    FetchAPI();\n    // getLocation();\n  });\n\n  const FetchAPI = async () => {\n    const response = await axios.get(url);\n    console.log(response.data);\n    setWeather(response.data)\n  }\n  const getLocation = async() => {\n    const response = await axios.get(`https://geolocation-db.com/json/afa4d000-8eb9-11eb-a6ff-2538b793e762`);\n    const currentLocationInfo = `${response.data.city}`;\n    console.log(response);\n    setCity(currentLocationInfo);\n    FetchAPI();\n  }\n  const setTheCity = (city) => {\n    setCity(city);\n    FetchAPI();\n    console.log(`${city}`);\n  }\n  return (\n    <>\n      <div className={ (typeof weather.main != 'undefined') ? ( (weather.main.temp > 15) ? 'app warm' : 'app' ) : 'app' }>\n        <div className='linearGradientBackGround'>\n          <WeatherUI theCity={setTheCity}/>\n\n          <div className='currentLocationButtonContainer'>\n            <button className='currentLocation' onClick={getLocation}> <i class=\"fas fa-map-marker-alt\"></i> Current location</button>\n            {/* <button className='currentLocation'> <i class=\"fas fa-map-marker-alt\"></i> Current location</button> */}\n          </div>\n          \n          {(typeof weather.main != 'undefined') ? (\n            <div className=\"container\">\n              <div className='cityCountry'>{City}, {weather.sys.country}</div>\n              {/* <div className='cityCountry'>Patiala, IN</div> */}\n              <div className='degreeCelsius'>{Math.round(weather.main.temp)}°c</div>\n              {/* <div className='degreeCelsius'>29°c</div> */}\n              <div>{weather.weather[0].description}</div>\n              {/* <div className='weatherDescription'>Sunny</div> */}\n            </div>\n          ) : ('')}\n          \n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}